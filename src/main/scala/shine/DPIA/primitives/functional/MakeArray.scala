// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! //
// This file is automatically generated and should not be changed manually //
// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! //
package shine.DPIA.primitives.functional
import arithexpr.arithmetic._
import shine.DPIA.Phrases._
import shine.DPIA.Types.DataType._
import shine.DPIA.Types._
import shine.DPIA._
final case class MakeArray(elements: Vector[Phrase[ExpType]])(val n: Nat, val dt: DataType) extends ExpPrimitive {
  {}
  override val t: ExpType = expT(ArrayType(n, dt), read)
  override def visitAndRebuild(v: VisitAndRebuild.Visitor): MakeArray = new MakeArray(elements.map(VisitAndRebuild(_, v)))(v.nat(n), v.data(dt))
  def unwrap: (Nat, DataType) = (n, dt)
}
